import { PlaylistPlayer } from "./playlist";
import { PlayerMetadata, VideoData } from "./types";
export declare class YouTubeMediaPlayer extends EventTarget {
    private element?;
    private loop?;
    private autoPlay?;
    private sources?;
    private duration?;
    private showPoster?;
    private buttons?;
    private source;
    private progress?;
    private timer?;
    private interval?;
    private poster?;
    private container?;
    private video?;
    private controls?;
    private timerInfo?;
    private title?;
    private changePlayVideo?;
    private metadata;
    playlist?: PlaylistPlayer;
    constructor(source: VideoData, metadata: PlayerMetadata, playlist?: PlaylistPlayer);
    setVideo(data: VideoData, play?: boolean): Promise<void>;
    private onChangeReady;
    private init;
    private render;
    private createTitle;
    private createControls;
    private getFormattedDuration;
    private attachEvents;
    private onPictureInPictureActivate;
    private onPictureInPictureDeactivate;
    private resetControlsTimer;
    private setupMetadata;
    private seekForward;
    private seekBackward;
    private seekTo;
    private onVideoPlay;
    private onVideoPause;
    private stop;
    private noopEvent;
    private blurTarget;
    private updateVideoTime;
    private triggerAutoPlay;
    private loopEnded;
    togglePlay(): void;
    private timeUpdate;
    play(): void;
    pause(): void;
    private onKeyDown;
    private onKeyUp;
    private onFullscreenChange;
    toggleFullscreen(): void;
    togglePictureInPicture(): void;
    private createUpdateLoop;
    private deleteUpdateLoop;
    private createSources;
    private getSourceType;
    private updateGradient;
    get isFullscreen(): boolean;
    get isPictureInPicture(): boolean;
    get isPlaying(): boolean;
    dispose(): void;
}
